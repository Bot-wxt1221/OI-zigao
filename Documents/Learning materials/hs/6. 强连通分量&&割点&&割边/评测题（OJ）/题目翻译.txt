题目描述（POJ1144）：电话公司正在建立一个新的电话网络，每个地方都有一个电话交换机（编号为1～N）。线路是双向的，并且总是将两个地方连接在一起，在每个地方，线路都终止于电话交换机。从每个地方都可以通过线路到达其他地方，但不需要直接连接，可以进行多次交换。有时在某个地方发生故障，会导致交换机无法运行。在这种情况下，除了无法到达失败的地方，还可能导致其他地方无法相互连接。这个地方（发生故障的地方）是至关重要的。请写程序来查找所有关键位置的数量。
输入：输入包含多个测试用例。每个测试用例都描述一个网络。每个测试用例的第1行都是N（N<100）。接下来最多N行中的每一行都包含一个地点的编号，后面是该地方可以直达的地点的编号。每个测试用例都以一条仅包含0的行结束。N=0时输入结束，不处理。
输出：对每个测试用例，都单行输出关键位置的数量。

题目描述（POJ3352）：热带岛屿负责道路的人们想修理和升级岛上各个旅游景点之间的道路。道路本身也很有趣，它们从不在交叉路口汇合，而是通过桥梁和隧道相互交叉或相互通过。通过这种方式，每条道路都在两个特定的旅游景点之间运行，这样游客就不会迷失。不幸的是，当建筑公司在特定道路上工作时，该道路在任何一个方向都无法使用。如果在两个旅游景点之间无法同行，则即使建筑公司在任何特定时间只在一条道路上工作，也可能出现问题。
道路部门已经决定在景点之间建造新的道路，以便在最终配置中，如果任何一条道路正在建设，则仍然可以使用剩余的道路在任意两个旅游景点之间旅行。我们的任务是找到所需的最少数量的新道路。
输入：输入的第1行将包括正整数n（3≤n≤1000）和r（2≤r≤1000），其中n是旅游景点的数量，r是道路的数量。旅游景点的编号为1～n。以下r行中的每一行都将由两个整数v和w组成，表示在v和w的景点之间存在道路。请注意，道路是双向的，在任何两个旅游景点之间最多有一条道路。此外，在目前的配置中，可以在任意两个旅游景点之间旅行。
输出：单行输出需要添加的最少道路数量。

题目描述（POJ2553）：对于有向图G中任意一个节点v，如果节点v可以到达节点w，那么节点w都可以到达节点v，那么节点v是一个sink节点。图G的底部是由图G中所有的sink节点构成的，请按顺序输出图G底部的所有sink节点，如果没有sink节点，则输出一个空行。
输入：输入包含几个测试用例，每个测试用例都对应一个有向图G。每个测试用例都以整数v（1≤v≤5000）开始，表示图G的节点数，节点编号为1～v。接下来是非负整数e，然后是e对节点编号v1,w1,…,ve,we，其中(vi,wi)表示一条边。在最后一个测试用例后跟着一个0。
输出：单行输出图底部的所有sink节点。如果没有，则输出一个空行。

题目描述（POJ1236）：许多学校连接到计算机网络，这些学校之间已达成协议：每所学校都有一份学校名单，其中包括分发软件的学校（接收学校）。注意，即使学校B出现在学校A的分发列表中，学校A也不一定出现在学校B的列表中。编写程序，计算必须收到新软件副本的最少学校数量，以便软件根据协议到达网络中的所有学校（子任务1）。作为进一步的任务，希过将新软件的副本发送到任意学校，使该软件覆盖网络中的所有学校。为了实现这一目标，可能必须通过新成员扩展接收者列表。请计算必须进行的最小数量的扩展，以便发送新软件到任意学校，它将到达所有其他学校（子任务2）。一个扩展表示将一个新成员引入一所学校的接收者名单。
输入：第1行包含1个整数N，表示网络中的学校数（2≤N≤100）。学校由前N个正整数标识。接下来的N行，每一行都描述了接收者列表，第i+1行包含学校i的接收者的标识符。每个列表都以0结尾。空列表在行中仅包含0。
输出：输出包括两行。第1行应包含子任务1的解，第2行应包含子任务2的解。
